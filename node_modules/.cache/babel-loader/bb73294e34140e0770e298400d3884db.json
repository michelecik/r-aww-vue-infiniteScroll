{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"r/aww\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($setup.data), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;6DAAAC,6BAAc,MAEdC,iBAAGC,WAAH,GAAO;EAAA","names":["_createElementVNode","_hoisted_1","_toDisplayString","$setup"],"sourceRoot":"","sources":["/Users/michelecattellani/Sites/aww-infinitescroll/src/App.vue"],"sourcesContent":["<template>\n  <h1>r/aww</h1>\n\n  {{ data }}\n</template>\n\n<script>\nimport { ref } from 'vue'\nexport default {\n  name: 'App',\n  components: {\n  },\n  setup() {\n    const data = ref()\n    const fetchData = () => {\n      fetch('https://www.reddit.com/r/aww.json')\n      .then(res => res.json())\n      .then(body => {\n        console.log(body)\n        data.value = body.data.children\n      })\n    }\n\n    fetchData()\n\n    return {\n      data\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}